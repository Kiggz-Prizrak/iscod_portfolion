import React from "react";

const MysqlSkill = () => {
  return (
    <main className="bg-nebula bg-stars">
      <header className="skill__header">
        <h1 className="skill__title neon-yellow">Comp√©tence ‚Äî MySQL</h1>
        <p className="skill__tagline">
          Mod√©lisation, int√©gration et gestion des donn√©es relationnelles avec{" "}
          <strong>MySQL</strong>.
        </p>
      </header>

      {/* D√©finition */}
      <section className="skill__section bg-grid">
        <h2 className="skill__subtitle neon-blue">D√©finition</h2>
        <p>
          <strong>MySQL</strong> est un syst√®me de gestion de base de donn√©es
          relationnelle (SGBDR) open-source largement utilis√© pour le
          d√©veloppement web et les architectures full stack. Sa robustesse, sa
          compatibilit√© et ses performances en font un standard pour le
          stockage, la structuration et la manipulation de donn√©es.
        </p>
        <p>
          Je l‚Äôutilise au c≈ìur de mes projets pour mod√©liser les entit√©s, g√©rer
          les relations et assurer la coh√©rence des donn√©es via{" "}
          <strong>Sequelize</strong> (Node.js) ou <strong>JPA/Hibernate</strong>{" "}
          (Java). Chaque base est pens√©e pour √™tre <strong>intelligible</strong>
          , <strong>scalable</strong> et <strong>s√©curis√©e</strong>.
        </p>
      </section>

      {/* √âl√©ments de preuve */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">√âl√©ments de preuve</h2>

        <article className="proof">
          <h3>üé≠ Large Field Theater ‚Äî Synchronisation multi-entit√©s</h3>
          <ul>
            <li>
              Cr√©ation d‚Äôun sch√©ma complet pour les <strong>Devices</strong>,{" "}
              <strong>DeviceManagers</strong>, <strong>Groups</strong>,{" "}
              <strong>Sessions</strong> et <strong>DEM Servers</strong>.
            </li>
            <li>
              Gestion des relations <code>1-n</code> et <code>n-n</code> entre
              groupes, casques et serveurs.
            </li>
            <li>
              Indexation et contraintes d‚Äôint√©grit√© pour √©viter les doublons et
              garantir la coh√©rence des synchronisations WebSocket.
            </li>
            <li>
              Utilisation de <strong>Sequelize ORM</strong> pour une gestion
              fluide des entit√©s tout en conservant un contr√¥le SQL natif pour
              les requ√™tes complexes.
            </li>
          </ul>
          <p className="proof__result">
            R√©sultat : une base <strong>robuste</strong>, capable de g√©rer des
            mises √† jour en temps r√©el sans corruption ni latence excessive.
          </p>
          <p className="proof__link">
            ‚Üí{" "}
            <a href="/projects/large-field-theater">
              Voir le projet Large Field Theater
            </a>
          </p>
        </article>

        <article className="proof">
          <h3>üì¶ Project Management Tool ‚Äî Mod√©lisation orient√©e m√©tier</h3>
          <ul>
            <li>
              Conception d‚Äôun <strong>MCD complet</strong> : utilisateurs,
              projets, membres, t√¢ches et r√¥les.
            </li>
            <li>
              Int√©gration avec <strong>Spring Data JPA</strong> et{" "}
              <strong>Hibernate</strong> pour g√©rer les entit√©s et les
              relations.
            </li>
            <li>
              Requ√™tes param√©tr√©es et transactions atomiques pour la gestion des
              statuts et priorit√©s de t√¢ches.
            </li>
            <li>
              Migration automatis√©e de la base via{" "}
              <strong>Docker + script SQL</strong>.
            </li>
          </ul>
          <p className="proof__result">
            R√©sultat : une structure claire et scalable, conforme aux standards
            professionnels et totalement int√©gr√©e au pipeline CI/CD.
          </p>
          <p className="proof__link">
            ‚Üí <a href="/projects/pmt">Voir le projet PMT</a>
          </p>
        </article>

        <article className="proof">
          <h3>üß† DEM Server ‚Äî Gestion du stockage distribu√©</h3>
          <p>
            Impl√©mentation d‚Äôun syst√®me d‚Äôenregistrement des statuts et logs de
            serveurs dans une base MySQL partag√©e entre le backend Node.js et
            les instances de serveurs DEM. L‚Äôobjectif : centraliser les
            √©v√©nements sans compromettre la coh√©rence ni les performances.
          </p>
        </article>
      </section>

      {/* Autocritique */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">Mon autocritique</h2>
        <ul className="checklist">
          <li>
            <strong>Niveau</strong> : ma√Ætrise de la conception relationnelle,
            des jointures complexes et de l‚Äôint√©gration via ORM (Sequelize,
            Hibernate).
          </li>
          <li>
            <strong>Place dans mon profil</strong> : comp√©tence technique
            centrale pour la persistance et la coh√©rence de mes applications
            full stack.
          </li>
          <li>
            <strong>Recul</strong> : MySQL est fiable mais n√©cessite une
            vigilance sur les index, la concurrence et la normalisation. Je
            veille √† √©quilibrer performance et maintenabilit√©.
          </li>
        </ul>
      </section>

      {/* √âvolution */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">Mon √©volution sur MySQL</h2>
        <ul>
          <li>
            Approfondir l‚Äôoptimisation des requ√™tes complexes et la gestion des
            index.
          </li>
          <li>
            Exp√©rimenter l‚Äô<strong>architecture multi-tenant</strong> et la
            r√©plication de bases sur Docker.
          </li>
          <li>
            Explorer la <strong>migration vers PostgreSQL</strong> pour des cas
            d‚Äôusage plus orient√©s data analytics.
          </li>
          <li>
            Mettre en place des tests d‚Äôint√©grit√© automatis√©s dans mes pipelines
            CI/CD.
          </li>
        </ul>
      </section>

      {/* R√©alisations associ√©es */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">R√©alisations associ√©es</h2>

        <div className="skill__cards">
          <a href="/projects/large-field-theater" className="skill__card">
            <h3>üé≠ Large Field Theater</h3>
            <p>Base relationnelle devices / sessions / DEM servers</p>
          </a>

          <a href="/projects/pmt" className="skill__card">
            <h3>üì¶ Project Management Tool</h3>
            <p>Mod√®le JPA ¬∑ Transactions ¬∑ MySQL containeris√©</p>
          </a>

          <a href="/projects/groupomania" className="skill__card">
            <h3>üí¨ Groupomania</h3>
            <p>Sequelize ORM ¬∑ Authentification ¬∑ MySQL backend</p>
          </a>
        </div>
      </section>
    </main>
  );
};

export default MysqlSkill;
