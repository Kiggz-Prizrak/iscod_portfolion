import { Link } from "react-router-dom";

const ReactSkill = () => {
  return (
    <main className="bg-nebula bg-stars">
      <header className="skill__header">
        <h1 className="skill__title neon-yellow">CompÃ©tence â€” React</h1>
        <p className="skill__tagline">
          Interfaces dynamiques, connectÃ©es et modulaires avec{" "}
          <strong>React</strong>.
        </p>
      </header>

      {/* DÃ©finition */}
      <section className="skill__section bg-grid">
        <h2 className="skill__subtitle neon-blue">DÃ©finition</h2>
        <p>
          <strong>React</strong> est une bibliothÃ¨que JavaScript orientÃ©e
          composants, idÃ©ale pour crÃ©er des interfaces
          <span className="highlight-blue"> rÃ©actives</span>,{" "}
          <span className="highlight-pink">scalables</span> et maintenables. Son{" "}
          <em>Virtual DOM</em> et sa logique de composants rÃ©utilisables
          permettent de construire des applications modernes tout en gardant un
          code clair et performant.
        </p>
        <p>
          Dans mes projets, jâ€™emploie React pour concevoir des{" "}
          <strong>dashboards en temps rÃ©el</strong>, des outils interactifs et
          des interfaces connectÃ©es Ã  des backends Node.js / C#. CouplÃ© Ã {" "}
          <strong>Redux</strong> (gestion dâ€™Ã©tat),{" "}
          <strong>Socket.IO / WebSocket</strong> (temps rÃ©el) et parfois{" "}
          <strong>RC-Dock</strong> (fenÃªtres dockables), React dÃ©passe
          lâ€™affichage : il devient lâ€™ossature dâ€™une
          <strong> architecture front</strong> robuste.
        </p>
      </section>

      {/* Ã‰lÃ©ments de preuve */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">Ã‰lÃ©ments de preuve</h2>

        <article className="proof">
          <h3>ðŸŽ­ Large Field Theater â€” Pilotage VR en temps rÃ©el</h3>
          <ul>
            <li>
              <strong>Carte interactive</strong> : suivi live des casques VR
              (position, batterie, tempÃ©rature, connectivitÃ©).
            </li>
            <li>
              <strong>Redux</strong> pour stocker localement les flux et limiter
              les allers-retours rÃ©seau.
            </li>
            <li>
              <strong>WebSockets</strong> pour la tÃ©lÃ©mÃ©trie et les Ã©vÃ©nements
              (sessions, groupes, commandes).
            </li>
            <li>
              UI <strong>dockable</strong> (RC-Dock) : fenÃªtres drag & drop,
              modales, notifications.
            </li>
          </ul>
          <p className="proof__result">
            RÃ©sultat : une interface <strong>fluide</strong> et{" "}
            <strong>stable</strong> dans un contexte fortement asynchrone, prÃªte
            pour des fonctionnalitÃ©s avancÃ©es (POV stream par casque).
          </p>
          <p className="proof__link">
            â†’{" "}
            <Link href="/projects/large-field-theater">
              Voir le projet Large Field Theater
            </Link>
          </p>
        </article>

        <article className="proof">
          <h3>ðŸ§© Kanban Web App â€” Gestion locale avec persistance</h3>
          <ul>
            <li>
              Tableaux Kanban personnalisables, <strong>drag & drop</strong>{" "}
              (React Beautiful DnD), <strong>mode clair/sombre</strong>.
            </li>
            <li>
              <strong>Redux Toolkit</strong> + <strong>Redux Persist</strong>{" "}
              pour une sauvegarde 100% locale (sans backend).
            </li>
          </ul>
          <p className="proof__result">
            RÃ©sultat : base <strong>simple</strong>, <strong>rapide</strong> et{" "}
            <strong>rÃ©utilisable</strong> pour des outils personnels.
          </p>
          <p className="proof__link">
            â†’{" "}
            <Link href="/projects/kanban-web-app">
              Voir le projet Kanban Web App
            </Link>
          </p>
        </article>

        <article className="proof">
          <h3>ðŸ§± PMT â€” RÃ©flexes dâ€™ingÃ©nierie dâ€™interface</h3>
          <p>
            MÃªme si PMT est majoritairement en Angular, jâ€™y ai rÃ©appliquÃ© mes
            bonnes pratiques React : dÃ©couplage des couches, composants
            modulaires, gestion dâ€™Ã©tat et structure claire.
          </p>
          <p className="proof__link">
            â†’ <Link href="/projects/pmt">Voir le projet PMT</Link>
          </p>
        </article>
      </section>

      {/* Autocritique */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">Mon autocritique</h2>
        <ul className="checklist">
          <li>
            <strong>Niveau</strong> : autonomie avancÃ©e sur la conception de
            composants, la gestion dâ€™Ã©tat (Redux / Context), lâ€™intÃ©gration temps
            rÃ©el (WebSocket) et lâ€™optimisation.
          </li>
          <li>
            <strong>Place dans mon profil</strong> : compÃ©tence front centrale â€”
            je conÃ§ois des UIs <span className="highlight-blue">vivantes</span>{" "}
            et <span className="highlight-pink">connectÃ©es</span>.
          </li>
          <li>
            <strong>Recul</strong> : React exige de la{" "}
            <em>rigueur structurelle</em>. Je centralise lâ€™Ã©tat, documente les
            flux et contrÃ´le les effets de bord (Hooks) pour Ã©viter lâ€™entropie.
          </li>
        </ul>
      </section>

      {/* Ã‰volution */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">Mon Ã©volution sur React</h2>
        <ul>
          <li>
            Approfondir <strong>React concurrent</strong> & Server Components
            (React 19) pour des UIs encore plus performantes.
          </li>
          <li>
            SystÃ©matiser les <strong>tests UI</strong> (Jest, Testing Library) :
            rendering, hooks, interactions.
          </li>
          <li>
            Explorer <strong>React Native</strong> pour relier mes UIs au mobile
            / casques VR (Ã©cosystÃ¨me LFT).
          </li>
        </ul>
      </section>

      {/* RÃ©alisations associÃ©es */}
      <section className="skill__section">
        <h2 className="skill__subtitle neon-blue">RÃ©alisations associÃ©es</h2>

        <div className="skill__cards">
          <Link href="/projects/large-field-theater" className="skill__card">
            <h3>ðŸŽ­ Large Field Theater</h3>
            <p>React Â· Redux Â· WebSocket</p>
          </Link>

          <Link href="/projects/kanban-web-app" className="skill__card">
            <h3>ðŸ§© Kanban Web App</h3>
            <p>React Â· Redux Persist Â· DnD</p>
          </Link>

          <Link href="/projects/pmt" className="skill__card">
            <h3>ðŸš€ PMT</h3>
            <p>Architecture & rÃ©flexes dâ€™interface</p>
          </Link>
        </div>
      </section>
    </main>
  );
};

export default ReactSkill;
